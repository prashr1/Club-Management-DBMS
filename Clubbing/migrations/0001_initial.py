# Generated by Django 4.1.3 on 2023-03-13 15:46

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="clubModel",
            fields=[
                ("club_id", models.IntegerField(primary_key=True, serialize=False)),
                ("club_name", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=100)),
                ("club_email", models.CharField(max_length=100, unique=True)),
            ],
            options={"db_table": "Club",},
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("city", models.CharField(max_length=100)),
                ("username", models.CharField(max_length=100)),
                (
                    "email",
                    models.EmailField(max_length=60, unique=True, verbose_name="email"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_admin", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="userModel",
            fields=[
                ("u_id", models.IntegerField(primary_key=True, serialize=False)),
                ("u_name", models.CharField(max_length=100)),
                ("age", models.IntegerField()),
                ("contact", models.CharField(max_length=20)),
                ("address", models.CharField(max_length=200)),
                (
                    "club_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Clubbing.clubmodel",
                    ),
                ),
            ],
            options={"db_table": "User",},
        ),
        migrations.CreateModel(
            name="eventModel",
            fields=[
                ("event_id", models.IntegerField(primary_key=True, serialize=False)),
                ("capacity", models.IntegerField()),
                ("time", models.CharField(max_length=100)),
                ("total_duration", models.IntegerField()),
                ("date", models.CharField(max_length=20)),
                (
                    "club_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Clubbing.clubmodel",
                    ),
                ),
            ],
            options={"db_table": "Event",},
        ),
        migrations.CreateModel(
            name="empModel",
            fields=[
                ("e_id", models.IntegerField(primary_key=True, serialize=False)),
                ("e_name", models.CharField(max_length=100)),
                ("department", models.CharField(max_length=50)),
                ("e_contact", models.IntegerField()),
                ("join_date", models.CharField(max_length=20)),
                (
                    "club_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Clubbing.clubmodel",
                    ),
                ),
            ],
            options={"db_table": "Employee",},
        ),
        migrations.CreateModel(
            name="bookModel",
            fields=[
                ("booking_id", models.IntegerField(primary_key=True, serialize=False)),
                ("booking_date", models.CharField(max_length=100)),
                ("booking_mode", models.CharField(max_length=100)),
                (
                    "event_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Clubbing.eventmodel",
                    ),
                ),
                (
                    "u_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Clubbing.usermodel",
                    ),
                ),
            ],
            options={"db_table": "Booking",},
        ),
    ]
